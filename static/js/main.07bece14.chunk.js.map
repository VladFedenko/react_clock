{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","props","name","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZN,KAAM,IAAIC,OAGZG,OAAOG,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MAC7D,OAdP,gCAiBE,SAAmBC,GACbR,KAAKS,MAAMC,OAASF,EAAUE,MAChCT,OAAOG,QAAQO,MAAf,uBAAqCH,EAAUE,KAA/C,eAA0DV,KAAKS,MAAMC,SAnB3E,kCAuBE,WACEE,cAAcZ,KAAKD,WAxBvB,oBA2BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKS,MAAMC,OAGb,YAED,sBAAMG,UAAU,cAAhB,SACGhB,EAAKS,cAAcC,OAAO,IAAK,YAvC1C,GAA2BO,aCN3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAQX,IAAMG,EAAb,4MACEvB,MAAQ,CACNc,KAAM,UACNU,UAAU,GAHd,EAMErB,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBsB,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CACZiB,UAAU,OAIdC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKrB,SAAS,CACZiB,UAAU,OAIdpB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZO,KAAMK,QAEP,QA1BP,kCA6BE,WACEH,cAAcZ,KAAKD,WA9BvB,oBAiCE,WACE,MAA2BC,KAAKJ,MAAxBc,EAAR,EAAQA,KAAMU,EAAd,EAAcA,SAEd,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOV,KAAMA,WAvClC,GAAyBI,aCZzBW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.07bece14.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: string\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        date: new Date(),\n      });\n\n      window.console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      window.console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  name: string,\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    name: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n      });\n    });\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        name: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={name} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}